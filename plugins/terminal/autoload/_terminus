#compdef terminus

function _terminus() {
    local ret=1 cmd="$words[1]" state

    function _terminus_subcommands() {
        # If the last word isn't completed (aka "cl" for "cli"), remove it
        if [[ -n "${words[${#words}]}" ]]; then
            words[${#words}]=()
        fi

        # Check Terminus itself for subcommands for options
        if [[ -n $words[3] ]]; then
            # @TODO: Get the desc information out of cmd-dump like we do below
            local terminus_options=($(terminus cli completions --line="$cmd $words[2] $words[3]" 2>&1))
            if [[ -n $terminus_options ]]; then
                _describe -o 'option' terminus_options && ret=0
            fi
            return
        fi

        local jq_command
        if [[ -z $words[2] ]]; then
            jq_command='.subcommands'
        else
            jq_command='.subcommands | .[] | select(.name == "'$words[2]'") | .subcommands'
        fi
        jq_command+='| .[] | "\(.name):\(.description)"'

        local terminus_subcommands=(${(f)"$(terminus cli cmd-dump --format=json | jq -r $jq_command 2>/dev/null)"})

        if [[ -n $terminus_subcommands ]]; then
            _describe -t subcommands 'subcommands' terminus_subcommands && ret=0
        fi


    }

    local terminus_args=(
        '--colorize[Use color in output]'
        '--debug[Get debug output]'
        '--yes[Answer yes to all prompts]'
        '--format[Change the output type to JSON, bash, or silent]'
        '*: :_terminus_subcommands'
    )

    _arguments $terminus_args

    return ret
}

_terminus "$@"
