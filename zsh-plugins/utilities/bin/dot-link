#!/usr/bin/env zsh

# This was mainly taken from Paul Irish and cleaned up to my needs https://github.com/paulirish/dotfiles

# this symlinks all the dotfiles ~/
answer_is_yes() {
    [[ "$REPLY" =~ ^[Yy] $ ]]  \
 && return 0  \
 || return 1
}

ask_for_confirmation() {
    printf "\e[0;33m  [?] $1 (y/n) \e[0m"
    read -q "REPLY"
    printf "\n"
}

execute() {
    eval " $1 " && print_success "$2" || print_error "$2"
}

print_error() {
    # Print output in red
    printf "\e[0;31m  [✖] $1$2\e[0m\n"
}

print_warning() {
    # Print output in yellow
    printf "\e[0;33m  [✔] $1\e[0m\n"
}

print_success() {
    # Print output in green
    printf "\e[0;32m  [✔] $1\e[0m\n"
}

DOTFILES=${DOTFILES-$HOME/.dotfiles}
cd $DOTFILES

# finds all .dotfiles in this folder and the bin folder
excluded=( $(git check-ignore *(D ) ) .git* )
dotfiles_all= ($(print -l .*))

files_to_symlink=( ${dotfiles_all:|excluded} )

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

main() {
    local i
    local sourceFile
    local targetFile

    for i in ${files_to_symlink[@]}; do
        sourceFile="$DOTFILES/$i"
        targetFile="$HOME/$i"

        if [ -e "$targetFile" ]; then
            if [ "$(readlink"$targetFile")" != "$sourceFile" ]; then
                ask_for_confirmation "'$targetFile' already exists, do you want to overwrite it?"
                if answer_is_yes; then
                    execute "ln -fs $sourceFile$targetFile" "$targetFile → $sourceFile"
                else
                    print_error "$targetFile → $sourceFile"
                fi
            else
                print_warning "$targetFile → $sourceFile"
            fi
        else
            execute "ln -fs $sourceFile$targetFile" "$targetFile → $sourceFile"
        fi
    done
}

main
